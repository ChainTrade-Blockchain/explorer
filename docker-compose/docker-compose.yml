version: '3.9'

services:
  redis-db:
    extends:
      file: ./services/redis.yml
      service: redis-db

  db-init:
    extends:
      file: ./services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.yml
      service: db
    environment:
      POSTGRES_USER: blockscout
      POSTGRES_PASSWORD: ceWb1MeLBEeOIfk65gU8EjF8
      POSTGRES_DB: blockscout

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        RELEASE_VERSION: 8.1.1
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_VARIANT: geth
        ETHEREUM_JSONRPC_HTTP_URL: http://host.docker.internal:8545
        ETHEREUM_JSONRPC_TRACE_URL: http://host.docker.internal:8545
        ETHEREUM_JSONRPC_WS_URL: ws://host.docker.internal:8546
        DATABASE_URL: postgresql://postgres:BH^."il.H{r4kh0/@34.172.209.76:5432/postgres
        COIN: achaintrade
        COIN_NAME: achaintrade
        COIN_SYMBOL: CHTR
        CHAIN_ID: '306090'
        CHAIN_TYPE: ethereum
        FIRST_BLOCK: '1'
        LOGO: https://www.chaintrade.network/main-2.png
        NETWORK: chaintrade-testnet
        SECRET_KEY_BASE: 56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN
        PORT: 4000
        ETHEREUM_JSONRPC_TRANSPORT: http

  nft_media_handler:
    depends_on:
      - backend
    extends:
      file: ./services/nft_media_handler.yml
      service: nft_media_handler
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        RELEASE_VERSION: 8.1.1

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.yml
      service: stats

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy
